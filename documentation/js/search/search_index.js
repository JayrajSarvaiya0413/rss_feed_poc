var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.355,1,1.566]],["body/controllers/AppController.html",[0,2.026,1,2.34,2,1.574,3,0.675,4,0.573,5,0.573,6,2.535,7,0.675,8,1.763,9,3.809,10,1.819,11,0.052,12,1.043,13,3.158,14,1.37,15,2.026,16,0.868,17,0.786,18,1.95,19,2.535,20,0.675,21,0.392,22,1.819,23,2.125,24,1.37,25,3.158,26,0.04,27,0.04]],["title/modules/AppModule.html",[28,0.898,29,1.566]],["body/modules/AppModule.html",[1,2.24,2,1.673,3,0.508,4,0.432,5,0.432,11,0.053,16,1.015,17,0.592,18,2.006,19,1.909,20,0.508,21,0.295,26,0.033,27,0.033,28,1.285,29,2.88,30,1.032,31,1.185,32,1.6,33,1.6,34,1.185,35,2.617,36,1.37,37,1.909,38,1.909,39,1.909,40,2.304,41,2.304,42,2.258,43,1.6,44,1.6,45,2.378,46,2.258,47,2.378,48,2.378,49,0.901,50,2.378,51,2.378,52,1.909,53,1.6,54,2.617,55,2.378,56,2.378,57,1.6,58,2.378,59,2.378,60,2.378]],["title/injectables/AppService.html",[18,1.18,61,0.782]],["body/injectables/AppService.html",[3,0.717,4,0.609,5,0.609,7,0.717,8,1.833,9,3.895,11,0.052,12,1.109,14,1.456,15,2.106,16,0.717,17,0.835,18,1.833,20,0.717,21,0.417,24,1.456,26,0.041,27,0.041,61,1.214,62,1.673,63,2.695,64,3.357,65,3.357,66,3.357]],["title/classes/CreateRssParserDto.html",[21,0.338,67,1.355]],["body/classes/CreateRssParserDto.html",[3,0.631,4,0.536,5,0.536,7,0.631,10,1.7,11,0.052,12,0.975,15,1.938,16,0.831,20,0.631,21,0.483,26,0.038,27,0.038,67,1.938,68,2.952,69,1.285,70,3.122,71,2.006,72,2.37,73,2.24,74,4.35,75,0.975,76,2.952,77,2.617,78,3.122,79,3.122,80,3.889,81,2.952,82,3.889,83,2.952,84,2.952,85,3.889,86,2.952,87,2.952]],["title/injectables/DatabaseConfig.html",[61,0.782,88,1.566]],["body/injectables/DatabaseConfig.html",[3,0.521,4,0.442,5,0.442,7,0.521,8,1.482,11,0.052,12,1.128,14,1.482,16,0.842,17,0.606,20,0.521,21,0.303,22,1.404,24,1.71,26,0.033,27,0.033,28,1.128,53,1.64,61,0.981,62,1.215,75,0.805,88,1.966,89,1.957,90,2.652,91,4.27,92,1.64,93,2.438,94,4.66,95,2.438,96,1.404,97,1.215,98,1.404,99,2.438,100,2.298,101,1.966,102,3.415,103,3.428,104,4.27,105,3.428,106,2.741,107,3.941,108,2.741,109,2.741,110,3.415,111,1.215,112,2.438,113,1.64,114,2.438]],["title/modules/DatabaseModule.html",[28,0.898,40,1.355]],["body/modules/DatabaseModule.html",[3,0.686,4,0.582,5,0.582,11,0.053,16,1.02,17,0.799,20,0.686,21,0.399,26,0.04,27,0.04,28,1.357,30,1.393,36,1.849,40,2.047,46,2.763,52,3.297,53,2.16,88,2.365,111,1.6,115,3.21,116,3.297,117,3.21,118,3.21,119,3.21]],["title/entities/RssParser.html",[120,1.83,121,1.355]],["body/entities/RssParser.html",[3,0.445,4,0.378,5,0.378,7,0.445,10,2.436,11,0.052,12,1.397,15,2.334,16,0.445,20,0.445,21,0.259,26,0.03,27,0.03,57,2.053,69,1.46,73,1.757,75,1.397,97,2.108,101,1.2,120,2.053,121,1.521,122,1.402,123,3.548,124,1.672,125,2.898,126,3.548,127,3.396,128,3.61,129,3.396,130,2.083,131,1.672,132,2.083,133,3.61,134,3.19,135,2.083,136,3.974,137,3.974,138,2.083,139,3.051,140,2.083,141,3.051,142,2.083,143,2.083,144,4.23,145,3.051,146,1.672,147,2.083,148,2.083,149,2.083,150,1.672,151,2.083]],["title/controllers/RssParserController.html",[0,1.355,152,1.566]],["body/controllers/RssParserController.html",[0,1.748,2,1.262,3,0.541,4,0.459,5,0.459,7,0.541,8,1.521,10,2.019,11,0.052,12,1.158,14,1.521,16,0.859,17,0.63,20,0.541,21,0.314,22,1.458,23,1.704,24,1.521,26,0.034,27,0.034,49,1.523,67,2.35,69,1.329,71,1.521,75,0.836,96,1.458,97,1.262,98,1.458,152,2.019,153,2.033,154,2.815,155,2.921,156,2.033,157,3.506,158,2.5,159,2.532,160,3.506,161,2.532,162,2.532,163,2.532,164,1.745,165,2.033,166,2.033,167,2.033,168,2.532,169,2.532,170,2.532]],["title/modules/RssParserModule.html",[28,0.898,41,1.355]],["body/modules/RssParserModule.html",[2,1.717,3,0.527,4,0.448,5,0.448,11,0.052,16,0.999,17,0.614,20,0.527,21,0.306,26,0.034,27,0.034,28,1.311,30,1.071,31,1.23,32,1.661,33,1.661,34,1.23,35,2.67,36,2.285,41,2.48,42,2.318,43,1.661,44,1.661,46,1.661,49,0.935,69,0.815,71,1.722,111,1.23,116,1.982,121,1.23,152,2.285,164,2.229,165,1.982,171,1.982,172,1.982,173,1.982,174,2.03,175,2.468,176,2.468,177,1.982,178,1.982,179,1.982,180,2.468]],["title/injectables/RssParserRepository.html",[61,0.782,174,1.18]],["body/injectables/RssParserRepository.html",[3,0.294,4,0.25,5,0.25,7,0.294,8,0.962,11,0.053,12,0.919,14,1.385,15,2.251,16,0.682,17,0.342,20,0.294,21,0.171,23,0.926,24,1.208,26,0.022,27,0.022,49,1.209,61,0.637,62,0.686,69,1.054,71,2.067,75,0.732,77,1.491,90,2.517,92,1.491,96,1.276,97,1.105,98,1.276,100,1.491,101,0.792,105,3.285,106,2.562,111,0.686,113,1.491,121,1.105,125,1.779,126,3.481,127,3.158,129,3.003,134,1.779,155,2.148,174,1.385,177,1.105,178,1.105,181,1.105,182,2.783,183,1.105,184,3.003,185,1.376,186,1.376,187,3.5,188,1.376,189,2.217,190,3.861,191,4.516,192,2.217,193,2.217,194,2.217,195,1.779,196,0.792,197,2.217,198,2.217,199,1.779,200,2.217,201,2.217,202,1.376,203,2.562,204,1.779,205,1.376,206,1.376,207,1.376,208,2.562,209,2.235,210,2.217,211,1.376,212,1.376,213,0.792,214,1.376,215,1.376,216,1.376,217,1.376,218,1.376,219,1.376,220,1.376]],["title/injectables/RssParserService.html",[61,0.782,164,1.18]],["body/injectables/RssParserService.html",[3,0.328,4,0.278,5,0.278,7,0.328,8,1.049,11,0.053,12,0.988,14,1.473,16,0.725,17,0.382,20,0.328,21,0.19,22,0.883,24,1.602,26,0.024,27,0.024,49,1.285,61,0.695,62,0.764,67,1.955,69,1.121,71,2.045,75,0.798,77,2.485,78,2.965,79,2.725,90,2.64,92,1.032,96,1.392,97,1.205,98,1.392,100,1.626,108,1.94,109,1.94,113,2.013,131,1.231,154,1.94,155,2.284,156,1.94,158,1.955,164,1.049,166,1.231,167,1.231,174,1.702,179,1.231,183,1.231,190,3.784,195,1.94,196,0.883,203,3.15,204,2.725,208,1.231,209,3.15,213,0.883,221,1.032,222,1.534,223,1.534,224,2.417,225,2.417,226,2.417,227,2.417,228,2.417,229,3.394,230,2.991,231,1.534,232,1.534,233,1.534,234,1.534,235,1.534,236,1.534,237,1.534,238,2.417,239,1.534,240,1.534,241,1.534,242,1.534,243,1.534,244,1.534,245,1.534,246,1.231,247,1.534,248,1.231,249,1.534]],["title/coverage.html",[250,2.478]],["body/coverage.html",[0,1.769,1,1.484,5,0.468,6,2.068,11,0.051,18,1.118,21,0.32,26,0.035,27,0.035,34,1.284,49,1.656,54,1.734,61,1.257,63,2.068,67,1.284,69,1.566,70,2.068,71,1.118,72,2.068,75,0.851,88,1.484,89,2.068,120,1.734,121,1.284,123,2.068,124,2.068,152,1.484,153,2.068,158,1.484,164,1.118,174,1.118,181,2.068,199,2.068,213,1.484,221,2.388,248,3.973,250,1.734,251,2.577,252,2.577,253,4.059,254,2.068,255,3.549,256,4.374,257,2.068,258,2.577,259,2.577,260,2.577,261,2.577,262,3.549,263,3.549,264,2.577,265,2.577]],["title/dependencies.html",[31,1.626,266,1.835]],["body/dependencies.html",[11,0.052,17,0.875,26,0.043,27,0.043,31,1.753,101,2.026,111,1.753,267,4.934,268,3.517,269,3.517,270,3.517,271,2.824,272,3.517,273,3.517,274,3.517,275,3.517,276,3.517,277,3.517,278,3.517]],["title/miscellaneous/functions.html",[279,1.316,280,2.619]],["body/miscellaneous/functions.html",[7,0.848,11,0.046,26,0.046,27,0.046,34,2.48,257,3.186,279,2.286,280,3.186,281,3.969]],["title/index.html",[7,0.488,282,2.286,283,2.286]],["body/index.html",[4,0.459,11,0.051,26,0.034,27,0.034,184,2.033,196,1.458,250,1.704,284,2.532,285,2.532,286,3.506,287,2.532,288,2.532,289,2.532,290,2.532,291,2.532,292,2.532,293,4.022,294,2.532,295,2.532,296,2.532,297,4.835,298,2.532,299,2.532,300,2.532,301,4.716,302,2.532,303,2.532,304,3.506,305,2.532,306,2.532,307,2.532,308,2.532,309,3.506,310,3.506,311,2.532,312,2.532,313,2.532,314,3.506,315,3.506,316,2.532,317,2.532,318,2.532,319,2.532,320,2.532,321,2.033,322,2.532,323,2.532,324,2.532,325,2.532,326,2.532,327,2.532,328,2.532,329,2.532,330,2.532,331,2.532,332,2.033,333,2.532,334,2.532,335,2.532,336,2.532,337,2.532,338,2.532,339,2.033]],["title/modules.html",[30,1.598]],["body/modules.html",[11,0.044,26,0.044,27,0.044,29,2.182,30,1.644,40,1.889,41,1.889,321,3.654,340,4.552,341,4.552,342,4.879,343,3.79,344,3.79]],["title/overview.html",[345,2.956]],["body/overview.html",[2,1.421,11,0.05,18,1.855,21,0.354,26,0.037,27,0.037,28,0.942,29,2.918,30,1.237,31,1.421,32,1.919,33,1.919,34,1.421,35,1.919,36,1.642,37,2.289,38,2.289,39,2.289,40,2.131,41,2.525,42,2.558,43,1.919,44,1.919,62,1.421,122,1.919,164,2.164,171,2.289,172,2.289,173,2.289,174,1.855,345,2.289,346,2.852,347,2.852,348,3.801,349,2.852]],["title/properties.html",[73,1.879,266,1.835]],["body/properties.html",[11,0.052,26,0.045,27,0.045,73,2.24,196,2.24,332,3.123,339,3.123,350,3.89,351,3.89,352,3.89]],["title/miscellaneous/variables.html",[279,1.316,353,2.619]],["body/miscellaneous/variables.html",[7,0.548,11,0.053,26,0.035,27,0.035,49,0.971,54,2.381,57,3.327,69,0.847,75,1.169,103,3.505,122,2.381,146,2.059,150,2.84,158,2.332,213,1.477,221,2.381,246,2.84,254,2.059,271,2.84,279,1.477,353,2.059,354,2.565,355,2.565,356,3.538,357,2.565,358,3.538,359,3.538,360,3.538,361,2.565,362,3.538,363,2.565,364,3.538,365,3.538,366,3.538,367,3.538,368,3.538,369,2.565,370,2.565,371,2.565,372,2.565]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateRssParserDto.html":{},"injectables/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"entities/RssParser.html":{},"controllers/RssParserController.html":{},"modules/RssParserModule.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":248,"title":{},"body":{"injectables/RssParserService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":351,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":275,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":256,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":253,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":348,"title":{},"body":{"overview.html":{}}}],["1/3",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":267,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":137,"title":{},"body":{"entities/RssParser.html":{}}}],["2",{"_index":347,"title":{},"body":{"overview.html":{}}}],["2.18.1",{"_index":272,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":263,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":346,"title":{},"body":{"overview.html":{}}}],["33",{"_index":259,"title":{},"body":{"coverage.html":{}}}],["3306",{"_index":359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":349,"title":{},"body":{"overview.html":{}}}],["50",{"_index":262,"title":{},"body":{"coverage.html":{}}}],["7.8.1",{"_index":277,"title":{},"body":{"dependencies.html":{}}}],["added",{"_index":230,"title":{},"body":{"injectables/RssParserService.html":{}}}],["already",{"_index":192,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["amazing",{"_index":322,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":82,"title":{},"body":{"classes/CreateRssParserDto.html":{}}}],["apiproperty()@isstring()@isurl(undefined",{"_index":76,"title":{},"body":{"classes/CreateRssParserDto.html":{}}}],["app",{"_index":299,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":292,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":204,"title":{},"body":{"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["associated",{"_index":197,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["async",{"_index":90,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["author",{"_index":332,"title":{},"body":{"index.html":{},"properties.html":{}}}],["autoloadentities",{"_index":367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":344,"title":{},"body":{"modules.html":{}}}],["await",{"_index":113,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["backers",{"_index":323,"title":{},"body":{"index.html":{}}}],["based",{"_index":194,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["body",{"_index":163,"title":{},"body":{"controllers/RssParserController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/RssParserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":342,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":340,"title":{},"body":{"modules.html":{}}}],["building",{"_index":287,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/CreateRssParserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateRssParserDto.html":{},"injectables/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"entities/RssParser.html":{},"controllers/RssParserController.html":{},"modules/RssParserModule.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":68,"title":{},"body":{"classes/CreateRssParserDto.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_rssparsermodule",{"_index":171,"title":{},"body":{"modules/RssParserModule.html":{},"overview.html":{}}}],["cluster_rssparsermodule_exports",{"_index":172,"title":{},"body":{"modules/RssParserModule.html":{},"overview.html":{}}}],["cluster_rssparsermodule_providers",{"_index":173,"title":{},"body":{"modules/RssParserModule.html":{},"overview.html":{}}}],["column",{"_index":144,"title":{},"body":{"entities/RssParser.html":{}}}],["column({default",{"_index":130,"title":{},"body":{"entities/RssParser.html":{}}}],["column({name",{"_index":133,"title":{},"body":{"entities/RssParser.html":{}}}],["config",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["configmodule.forroot",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":94,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["configuration",{"_index":104,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["const",{"_index":209,"title":{},"body":{"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["constraint",{"_index":149,"title":{},"body":{"entities/RssParser.html":{}}}],["constructor",{"_index":92,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["constructor(configservice",{"_index":93,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/DatabaseConfig.html":{},"controllers/RssParserController.html":{},"injectables/RssParserService.html":{}}}],["constructor(rssparserrepository",{"_index":183,"title":{},"body":{"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["containing",{"_index":109,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/RssParserService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/RssParserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/RssParserController.html":{},"coverage.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/RssParserController.html":{},"modules/RssParserModule.html":{},"overview.html":{}}}],["coverage",{"_index":250,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":189,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["created",{"_index":201,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["createrssdataentry",{"_index":182,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["createrssdataentry(title",{"_index":186,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["createrssparser",{"_index":154,"title":{},"body":{"controllers/RssParserController.html":{},"injectables/RssParserService.html":{}}}],["createrssparser(@body",{"_index":168,"title":{},"body":{"controllers/RssParserController.html":{}}}],["createrssparser(createrssparserdto",{"_index":156,"title":{},"body":{"controllers/RssParserController.html":{},"injectables/RssParserService.html":{}}}],["createrssparserdto",{"_index":67,"title":{"classes/CreateRssParserDto.html":{}},"body":{"classes/CreateRssParserDto.html":{},"controllers/RssParserController.html":{},"injectables/RssParserService.html":{},"coverage.html":{}}}],["createtypeormoptions",{"_index":91,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["data",{"_index":190,"title":{},"body":{"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["data.length",{"_index":247,"title":{},"body":{"injectables/RssParserService.html":{}}}],["database",{"_index":103,"title":{},"body":{"injectables/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["database.config",{"_index":117,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["databaseconfig",{"_index":88,"title":{"injectables/DatabaseConfig.html":{}},"body":{"injectables/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"coverage.html":{}}}],["databasemodule",{"_index":40,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["date",{"_index":125,"title":{},"body":{"entities/RssParser.html":{},"injectables/RssParserRepository.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/RssParserModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateRssParserDto.html":{},"entities/RssParser.html":{},"controllers/RssParserController.html":{}}}],["default",{"_index":150,"title":{},"body":{"entities/RssParser.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":148,"title":{},"body":{"entities/RssParser.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateRssParserDto.html":{},"injectables/DatabaseConfig.html":{},"entities/RssParser.html":{},"controllers/RssParserController.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/RssParserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":196,"title":{},"body":{"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":300,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":251,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":226,"title":{},"body":{"injectables/RssParserService.html":{}}}],["dto/create",{"_index":166,"title":{},"body":{"controllers/RssParserController.html":{},"injectables/RssParserService.html":{}}}],["duplicate",{"_index":219,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["e2e",{"_index":311,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":288,"title":{},"body":{"index.html":{}}}],["entities",{"_index":122,"title":{},"body":{"entities/RssParser.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/rss",{"_index":177,"title":{},"body":{"modules/RssParserModule.html":{},"injectables/RssParserRepository.html":{}}}],["entity",{"_index":120,"title":{"entities/RssParser.html":{}},"body":{"entities/RssParser.html":{},"coverage.html":{}}}],["entries",{"_index":203,"title":{},"body":{"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["entry",{"_index":191,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["env",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["exist",{"_index":193,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["existingrecord",{"_index":210,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateRssParserDto.html":{},"injectables/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"entities/RssParser.html":{},"controllers/RssParserController.html":{},"modules/RssParserModule.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/RssParserModule.html":{},"overview.html":{}}}],["express",{"_index":270,"title":{},"body":{"dependencies.html":{}}}],["feed",{"_index":78,"title":{},"body":{"classes/CreateRssParserDto.html":{},"injectables/RssParserService.html":{}}}],["feed.items.map(async",{"_index":236,"title":{},"body":{"injectables/RssParserService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateRssParserDto.html":{},"injectables/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"entities/RssParser.html":{},"controllers/RssParserController.html":{},"modules/RssParserModule.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{},"coverage.html":{}}}],["framework",{"_index":286,"title":{},"body":{"index.html":{}}}],["function",{"_index":258,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":280,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('get/rss",{"_index":160,"title":{},"body":{"controllers/RssParserController.html":{}}}],["getalldata",{"_index":155,"title":{},"body":{"controllers/RssParserController.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":282,"title":{"index.html":{}},"body":{}}],["globally",{"_index":198,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["graph",{"_index":343,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":318,"title":{},"body":{"index.html":{}}}],["guid",{"_index":126,"title":{},"body":{"entities/RssParser.html":{},"injectables/RssParserRepository.html":{}}}],["hello",{"_index":65,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":329,"title":{},"body":{"index.html":{}}}],["host",{"_index":356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":336,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":199,"title":{},"body":{"injectables/RssParserRepository.html":{},"coverage.html":{}}}],["implements",{"_index":112,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateRssParserDto.html":{},"injectables/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"entities/RssParser.html":{},"controllers/RssParserController.html":{},"modules/RssParserModule.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/RssParserModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateRssParserDto.html":{},"injectables/DatabaseConfig.html":{},"entities/RssParser.html":{},"controllers/RssParserController.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateRssParserDto.html":{},"injectables/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"entities/RssParser.html":{},"controllers/RssParserController.html":{},"modules/RssParserModule.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["injectable",{"_index":61,"title":{"injectables/AppService.html":{},"injectables/DatabaseConfig.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/DatabaseConfig.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{},"coverage.html":{}}}],["injectables",{"_index":62,"title":{},"body":{"injectables/AppService.html":{},"injectables/DatabaseConfig.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":205,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["injectrepository(rssparser",{"_index":206,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["installation",{"_index":296,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":298,"title":{},"body":{"index.html":{}}}],["isglobal",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["isstring",{"_index":85,"title":{},"body":{"classes/CreateRssParserDto.html":{}}}],["isurl",{"_index":84,"title":{},"body":{"classes/CreateRssParserDto.html":{}}}],["isurl(undefined",{"_index":87,"title":{},"body":{"classes/CreateRssParserDto.html":{}}}],["item",{"_index":237,"title":{},"body":{"injectables/RssParserService.html":{}}}],["item.guid",{"_index":242,"title":{},"body":{"injectables/RssParserService.html":{}}}],["item.link",{"_index":241,"title":{},"body":{"injectables/RssParserService.html":{}}}],["item.pubdate",{"_index":243,"title":{},"body":{"injectables/RssParserService.html":{}}}],["item.title",{"_index":240,"title":{},"body":{"injectables/RssParserService.html":{}}}],["jayrajkumar@123",{"_index":363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":325,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":333,"title":{},"body":{"index.html":{}}}],["keepconnectionalive",{"_index":368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/RssParserModule.html":{},"overview.html":{}}}],["length",{"_index":136,"title":{},"body":{"entities/RssParser.html":{}}}],["license",{"_index":339,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":315,"title":{},"body":{"index.html":{}}}],["link",{"_index":127,"title":{},"body":{"entities/RssParser.html":{},"injectables/RssParserRepository.html":{}}}],["load",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["localhost",{"_index":357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logging",{"_index":365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateRssParserDto.html":{},"injectables/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"entities/RssParser.html":{},"controllers/RssParserController.html":{},"modules/RssParserModule.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":77,"title":{},"body":{"classes/CreateRssParserDto.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["metadata",{"_index":274,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/DatabaseConfig.html":{},"controllers/RssParserController.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["miscellaneous",{"_index":279,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":314,"title":{},"body":{"index.html":{}}}],["mode",{"_index":304,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/RssParserModule.html":{}},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"modules/RssParserModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/RssParserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/**/*.entity.ts",{"_index":366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules/database/database.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/rss",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":328,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":271,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":334,"title":{},"body":{"index.html":{}}}],["name",{"_index":97,"title":{},"body":{"injectables/DatabaseConfig.html":{},"entities/RssParser.html":{},"controllers/RssParserController.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["needed",{"_index":244,"title":{},"body":{"injectables/RssParserService.html":{}}}],["nest",{"_index":293,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":338,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"controllers/RssParserController.html":{},"modules/RssParserModule.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfig.html":{},"modules/DatabaseModule.html":{}}}],["nestjs/core",{"_index":268,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":269,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":83,"title":{},"body":{"classes/CreateRssParserDto.html":{}}}],["nestjs/typeorm",{"_index":111,"title":{},"body":{"injectables/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"modules/RssParserModule.html":{},"injectables/RssParserRepository.html":{},"dependencies.html":{}}}],["new",{"_index":213,"title":{},"body":{"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":285,"title":{},"body":{"index.html":{}}}],["npm",{"_index":297,"title":{},"body":{"index.html":{}}}],["null",{"_index":151,"title":{},"body":{"entities/RssParser.html":{}}}],["number",{"_index":139,"title":{},"body":{"entities/RssParser.html":{}}}],["object",{"_index":108,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/RssParserService.html":{}}}],["open",{"_index":316,"title":{},"body":{"index.html":{}}}],["optional",{"_index":98,"title":{},"body":{"injectables/DatabaseConfig.html":{},"controllers/RssParserController.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["options",{"_index":102,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["out",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/RssParserModule.html":{},"overview.html":{}}}],["overview",{"_index":345,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":266,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":208,"title":{},"body":{"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["parameters",{"_index":96,"title":{},"body":{"injectables/DatabaseConfig.html":{},"controllers/RssParserController.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["parse",{"_index":224,"title":{},"body":{"injectables/RssParserService.html":{}}}],["parsed",{"_index":229,"title":{},"body":{"injectables/RssParserService.html":{}}}],["parser",{"_index":158,"title":{},"body":{"controllers/RssParserController.html":{},"injectables/RssParserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["parser.controller",{"_index":176,"title":{},"body":{"modules/RssParserModule.html":{}}}],["parser.controller.ts",{"_index":153,"title":{},"body":{"controllers/RssParserController.html":{},"coverage.html":{}}}],["parser.controller.ts:10",{"_index":159,"title":{},"body":{"controllers/RssParserController.html":{}}}],["parser.controller.ts:15",{"_index":161,"title":{},"body":{"controllers/RssParserController.html":{}}}],["parser.dto",{"_index":167,"title":{},"body":{"controllers/RssParserController.html":{},"injectables/RssParserService.html":{}}}],["parser.dto.ts",{"_index":72,"title":{},"body":{"classes/CreateRssParserDto.html":{},"coverage.html":{}}}],["parser.dto.ts:8",{"_index":81,"title":{},"body":{"classes/CreateRssParserDto.html":{}}}],["parser.entity",{"_index":178,"title":{},"body":{"modules/RssParserModule.html":{},"injectables/RssParserRepository.html":{}}}],["parser.entity.ts",{"_index":124,"title":{},"body":{"entities/RssParser.html":{},"coverage.html":{}}}],["parser.entity.ts:10",{"_index":143,"title":{},"body":{"entities/RssParser.html":{}}}],["parser.entity.ts:13",{"_index":138,"title":{},"body":{"entities/RssParser.html":{}}}],["parser.entity.ts:16",{"_index":135,"title":{},"body":{"entities/RssParser.html":{}}}],["parser.entity.ts:19",{"_index":132,"title":{},"body":{"entities/RssParser.html":{}}}],["parser.entity.ts:7",{"_index":142,"title":{},"body":{"entities/RssParser.html":{}}}],["parser.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["parser.module.ts",{"_index":175,"title":{},"body":{"modules/RssParserModule.html":{}}}],["parser.parseurl(createrssparserdto.rssurl",{"_index":233,"title":{},"body":{"injectables/RssParserService.html":{}}}],["parser.repository",{"_index":179,"title":{},"body":{"modules/RssParserModule.html":{},"injectables/RssParserService.html":{}}}],["parser.repository.ts",{"_index":181,"title":{},"body":{"injectables/RssParserRepository.html":{},"coverage.html":{}}}],["parser.repository.ts:22",{"_index":188,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["parser.repository.ts:50",{"_index":202,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["parser.repository.ts:7",{"_index":185,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["parser.service",{"_index":165,"title":{},"body":{"controllers/RssParserController.html":{},"modules/RssParserModule.html":{}}}],["parser.service.ts",{"_index":221,"title":{},"body":{"injectables/RssParserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["parser.service.ts:18",{"_index":223,"title":{},"body":{"injectables/RssParserService.html":{}}}],["parser.service.ts:51",{"_index":231,"title":{},"body":{"injectables/RssParserService.html":{}}}],["parser.service.ts:9",{"_index":222,"title":{},"body":{"injectables/RssParserService.html":{}}}],["parser/dto/create",{"_index":70,"title":{},"body":{"classes/CreateRssParserDto.html":{},"coverage.html":{}}}],["parser/entities/rss",{"_index":123,"title":{},"body":{"entities/RssParser.html":{},"coverage.html":{}}}],["parser/rss",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"controllers/RssParserController.html":{},"modules/RssParserModule.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["password",{"_index":362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":326,"title":{},"body":{"index.html":{}}}],["port",{"_index":358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":162,"title":{},"body":{"controllers/RssParserController.html":{}}}],["post('add/rss",{"_index":157,"title":{},"body":{"controllers/RssParserController.html":{}}}],["primarygeneratedcolumn",{"_index":145,"title":{},"body":{"entities/RssParser.html":{}}}],["primarygeneratedcolumn({name",{"_index":140,"title":{},"body":{"entities/RssParser.html":{}}}],["private",{"_index":207,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["process",{"_index":225,"title":{},"body":{"injectables/RssParserService.html":{}}}],["process.env.db_database",{"_index":372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_host",{"_index":369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_password",{"_index":371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_username",{"_index":370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":306,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":284,"title":{},"body":{"index.html":{}}}],["project",{"_index":317,"title":{},"body":{"index.html":{}}}],["promise",{"_index":105,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/RssParserRepository.html":{}}}],["promise.all",{"_index":235,"title":{},"body":{"injectables/RssParserService.html":{}}}],["properties",{"_index":73,"title":{"properties.html":{}},"body":{"classes/CreateRssParserDto.html":{},"entities/RssParser.html":{},"properties.html":{}}}],["provided",{"_index":195,"title":{},"body":{"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/RssParserModule.html":{},"overview.html":{}}}],["pubdate",{"_index":187,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["publication",{"_index":200,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["read",{"_index":327,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/RssParserController.html":{},"injectables/RssParserRepository.html":{}}}],["reflect",{"_index":273,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":184,"title":{},"body":{"injectables/RssParserRepository.html":{},"index.html":{}}}],["reset",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/RssParserModule.html":{},"overview.html":{}}}],["resolves",{"_index":106,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/RssParserRepository.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateRssParserDto.html":{},"injectables/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"entities/RssParser.html":{},"controllers/RssParserController.html":{},"modules/RssParserModule.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":100,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/DatabaseConfig.html":{},"controllers/RssParserController.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/DatabaseConfig.html":{},"controllers/RssParserController.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{}}}],["root",{"_index":361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rss",{"_index":71,"title":{},"body":{"classes/CreateRssParserDto.html":{},"controllers/RssParserController.html":{},"modules/RssParserModule.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{},"coverage.html":{}}}],["rss_data_key",{"_index":141,"title":{},"body":{"entities/RssParser.html":{}}}],["rss_feed_data",{"_index":146,"title":{},"body":{"entities/RssParser.html":{},"miscellaneous/variables.html":{}}}],["rssdataentries",{"_index":234,"title":{},"body":{"injectables/RssParserService.html":{}}}],["rssdataentries.filter((value",{"_index":245,"title":{},"body":{"injectables/RssParserService.html":{}}}],["rssdatakey",{"_index":128,"title":{},"body":{"entities/RssParser.html":{}}}],["rssdataparserresponse",{"_index":238,"title":{},"body":{"injectables/RssParserService.html":{}}}],["rssfeeddata",{"_index":212,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["rssfeeddata.date",{"_index":217,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["rssfeeddata.guid",{"_index":216,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["rssfeeddata.link",{"_index":215,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["rssfeeddata.title",{"_index":214,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["rssparser",{"_index":121,"title":{"entities/RssParser.html":{}},"body":{"entities/RssParser.html":{},"modules/RssParserModule.html":{},"injectables/RssParserRepository.html":{},"coverage.html":{}}}],["rssparsercontroller",{"_index":152,"title":{"controllers/RssParserController.html":{}},"body":{"controllers/RssParserController.html":{},"modules/RssParserModule.html":{},"coverage.html":{}}}],["rssparsermodule",{"_index":41,"title":{"modules/RssParserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RssParserModule.html":{},"modules.html":{},"overview.html":{}}}],["rssparserrepository",{"_index":174,"title":{"injectables/RssParserRepository.html":{}},"body":{"modules/RssParserModule.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{},"coverage.html":{},"overview.html":{}}}],["rssparserservice",{"_index":164,"title":{"injectables/RssParserService.html":{}},"body":{"controllers/RssParserController.html":{},"modules/RssParserModule.html":{},"injectables/RssParserService.html":{},"coverage.html":{},"overview.html":{}}}],["rssurl",{"_index":74,"title":{},"body":{"classes/CreateRssParserDto.html":{}}}],["run",{"_index":301,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":276,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":289,"title":{},"body":{"index.html":{}}}],["server",{"_index":290,"title":{},"body":{"index.html":{}}}],["side",{"_index":291,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateRssParserDto.html":{},"injectables/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"entities/RssParser.html":{},"controllers/RssParserController.html":{},"modules/RssParserModule.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{},"index.html":{}}}],["sponsors",{"_index":320,"title":{},"body":{"index.html":{}}}],["src/.../config.ts",{"_index":354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":281,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../rss",{"_index":355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":64,"title":{},"body":{"injectables/AppService.html":{}}}],["src/config.ts",{"_index":254,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":257,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/database/database.config.ts",{"_index":89,"title":{},"body":{"injectables/DatabaseConfig.html":{},"coverage.html":{}}}],["src/modules/database/database.config.ts:14",{"_index":99,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["src/modules/database/database.config.ts:6",{"_index":95,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["src/modules/database/database.module.ts",{"_index":115,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/modules/rss",{"_index":69,"title":{},"body":{"classes/CreateRssParserDto.html":{},"entities/RssParser.html":{},"controllers/RssParserController.html":{},"modules/RssParserModule.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":302,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":305,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":307,"title":{},"body":{"index.html":{}}}],["started",{"_index":283,"title":{"index.html":{}},"body":{}}],["starter",{"_index":295,"title":{},"body":{"index.html":{}}}],["statements",{"_index":252,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":330,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateRssParserDto.html":{},"entities/RssParser.html":{},"injectables/RssParserRepository.html":{}}}],["support",{"_index":321,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":341,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":265,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":264,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":310,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":313,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":312,"title":{},"body":{"index.html":{}}}],["tests",{"_index":309,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":319,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.configservice.get('database",{"_index":114,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["this.rssparserrepository.createrssdataentry",{"_index":239,"title":{},"body":{"injectables/RssParserService.html":{}}}],["this.rssparserrepository.find",{"_index":220,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["this.rssparserrepository.findone",{"_index":211,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["this.rssparserrepository.getalldata",{"_index":249,"title":{},"body":{"injectables/RssParserService.html":{}}}],["this.rssparserrepository.save(rssfeeddata",{"_index":218,"title":{},"body":{"injectables/RssParserRepository.html":{}}}],["this.rssparserservice.createrssparser(createrssparserdto",{"_index":169,"title":{},"body":{"controllers/RssParserController.html":{}}}],["this.rssparserservice.getalldata",{"_index":170,"title":{},"body":{"controllers/RssParserController.html":{}}}],["title",{"_index":129,"title":{},"body":{"entities/RssParser.html":{},"injectables/RssParserRepository.html":{}}}],["touch",{"_index":331,"title":{},"body":{"index.html":{}}}],["transfer",{"_index":227,"title":{},"body":{"injectables/RssParserService.html":{}}}],["true",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"entities/RssParser.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":232,"title":{},"body":{"injectables/RssParserService.html":{}}}],["twitter",{"_index":337,"title":{},"body":{"index.html":{}}}],["type",{"_index":75,"title":{},"body":{"classes/CreateRssParserDto.html":{},"injectables/DatabaseConfig.html":{},"entities/RssParser.html":{},"controllers/RssParserController.html":{},"injectables/RssParserRepository.html":{},"injectables/RssParserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":101,"title":{},"body":{"injectables/DatabaseConfig.html":{},"entities/RssParser.html":{},"injectables/RssParserRepository.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":116,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RssParserModule.html":{}}}],["typeormmodule.forfeature([rssparser",{"_index":180,"title":{},"body":{"modules/RssParserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":118,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmoduleoptions",{"_index":107,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["typeormoptionsfactory",{"_index":110,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["typescript",{"_index":294,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":131,"title":{},"body":{"entities/RssParser.html":{},"injectables/RssParserService.html":{}}}],["unique",{"_index":134,"title":{},"body":{"entities/RssParser.html":{},"injectables/RssParserRepository.html":{}}}],["unique(['guid",{"_index":147,"title":{},"body":{"entities/RssParser.html":{}}}],["unit",{"_index":308,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":228,"title":{},"body":{"injectables/RssParserService.html":{}}}],["unlicensed",{"_index":352,"title":{},"body":{"properties.html":{}}}],["url",{"_index":79,"title":{},"body":{"classes/CreateRssParserDto.html":{},"injectables/RssParserService.html":{}}}],["useclass",{"_index":119,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["username",{"_index":360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":80,"title":{},"body":{"classes/CreateRssParserDto.html":{}}}],["validator",{"_index":86,"title":{},"body":{"classes/CreateRssParserDto.html":{}}}],["value",{"_index":246,"title":{},"body":{"injectables/RssParserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":255,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":353,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":350,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":303,"title":{},"body":{"index.html":{}}}],["website",{"_index":335,"title":{},"body":{"index.html":{}}}],["world",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":324,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/RssParserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nRssParserModule\n\nRssParserModule\n\nAppModule -->\n\nRssParserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            RssParserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { RssParserModule } from './modules/rss-parser/rss-parser.module';\nimport { DatabaseModule } from './modules/database/database.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { config } from './config';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: ['./.env'],\n      load: [config],\n    }),\n    RssParserModule,\n    DatabaseModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRssParserDto.html":{"url":"classes/CreateRssParserDto.html","title":"class - CreateRssParserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRssParserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/rss-parser/dto/create-rss-parser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                rssUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        rssUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsUrl(undefined, {message: 'RSS feed URL is not valid.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/rss-parser/dto/create-rss-parser.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsUrl, IsString } from 'class-validator';\n\nexport class CreateRssParserDto {\n  @ApiProperty()\n  @IsString()\n  @IsUrl(undefined, { message: 'RSS feed URL is not valid.' })\n  rssUrl: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseConfig.html":{"url":"injectables/DatabaseConfig.html","title":"injectable - DatabaseConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/database/database.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/database/database.config.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/database/database.config.ts:14\n                \n            \n\n\n            \n                \n                    Retrieve and return the TypeORM module options for database configuration.\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A Promise that resolves to a TypeOrmModuleOptions object containing database configuration.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { TypeOrmModuleOptions, TypeOrmOptionsFactory } from '@nestjs/typeorm';\n\n@Injectable()\nexport class DatabaseConfig implements TypeOrmOptionsFactory {\n  constructor(private configService: ConfigService) {}\n\n  /**\n   * Retrieve and return the TypeORM module options for database configuration.\n   *\n   * @returns A Promise that resolves to a TypeOrmModuleOptions object containing database configuration.\n   */\n  async createTypeOrmOptions(): Promise {\n    return await this.configService.get('database');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ConfigModule } from '@nestjs/config';\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DatabaseConfig } from './database.config';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useClass: DatabaseConfig,\n    }),\n  ],\n  exports: [TypeOrmModule],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RssParser.html":{"url":"entities/RssParser.html","title":"entity - RssParser","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RssParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/rss-parser/entities/rss-parser.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                guid\n                            \n                            \n                                    \n                                link\n                            \n                            \n                                    \n                                rssDataKey\n                            \n                            \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/rss-parser/entities/rss-parser.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        guid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'GUID', unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/rss-parser/entities/rss-parser.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'LINK', length: 1000})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/rss-parser/entities/rss-parser.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rssDataKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({name: 'RSS_DATA_KEY'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/rss-parser/entities/rss-parser.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'TITLE', length: 1000})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/rss-parser/entities/rss-parser.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn, Unique } from 'typeorm';\n\n@Entity({ name: 'RSS_FEED_DATA' })\n// @Unique(['guid']) // Define 'guid' as a unique constraint\nexport class RssParser {\n  @PrimaryGeneratedColumn({ name: 'RSS_DATA_KEY' })\n  rssDataKey: number;\n\n  @Column({ name: 'TITLE', length: 1000 })\n  title: string;\n\n  @Column({ name: 'LINK', length: 1000 })\n  link: string;\n\n  @Column({ name: 'GUID', unique: true })\n  guid: string;\n\n  @Column({ default: null })\n  date: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RssParserController.html":{"url":"controllers/RssParserController.html","title":"controller - RssParserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RssParserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/rss-parser/rss-parser.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createRssParser\n                            \n                            \n                                    \n                                getAllData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        createRssParser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRssParser(createRssParserDto: CreateRssParserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('add/rss-parser')\n                \n            \n\n            \n                \n                    Defined in src/modules/rss-parser/rss-parser.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRssParserDto\n                                    \n                                                CreateRssParserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getAllData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('get/rss-parser')\n                \n            \n\n            \n                \n                    Defined in src/modules/rss-parser/rss-parser.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Get } from '@nestjs/common';\nimport { RssParserService } from './rss-parser.service';\nimport { CreateRssParserDto } from './dto/create-rss-parser.dto';\n\n@Controller()\nexport class RssParserController {\n  constructor(private readonly rssParserService: RssParserService) {}\n\n  @Post('add/rss-parser')\n  createRssParser(@Body() createRssParserDto: CreateRssParserDto) {\n    return this.rssParserService.createRssParser(createRssParserDto);\n  }\n\n  @Get('get/rss-parser')\n  getAllData() {\n    return this.rssParserService.getAllData();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RssParserModule.html":{"url":"modules/RssParserModule.html","title":"module - RssParserModule","body":"\n                   \n\n\n\n\n    Modules\n    RssParserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RssParserModule\n\n\n\ncluster_RssParserModule_exports\n\n\n\ncluster_RssParserModule_providers\n\n\n\n\nRssParserService \n\nRssParserService \n\n\n\nRssParserModule\n\nRssParserModule\n\nRssParserService  -->\n\nRssParserModule->RssParserService \n\n\n\n\n\nRssParserRepository\n\nRssParserRepository\n\nRssParserModule -->\n\nRssParserRepository->RssParserModule\n\n\n\n\n\nRssParserService\n\nRssParserService\n\nRssParserModule -->\n\nRssParserService->RssParserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/rss-parser/rss-parser.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RssParserRepository\n                        \n                        \n                            RssParserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RssParserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RssParserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RssParserService } from './rss-parser.service';\nimport { RssParserController } from './rss-parser.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { RssParser } from './entities/rss-parser.entity';\nimport { RssParserRepository } from './rss-parser.repository';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([RssParser])],\n  controllers: [RssParserController],\n  providers: [RssParserService, RssParserRepository],\n  exports: [RssParserService],\n})\nexport class RssParserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RssParserRepository.html":{"url":"injectables/RssParserRepository.html","title":"injectable - RssParserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RssParserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/rss-parser/rss-parser.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRssDataEntry\n                            \n                            \n                                    Async\n                                getAllData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rssParserRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/rss-parser/rss-parser.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rssParserRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createRssDataEntry\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRssDataEntry(title: string, link: string, guid: string, pubDate: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rss-parser/rss-parser.repository.ts:22\n                \n            \n\n\n            \n                \n                    Create an RSS data entry if it does not already exist based on the provided GUID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe title of the RSS data entry.\n\n\n                                    \n                                \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe link associated with the RSS data entry.\n\n\n                                    \n                                \n                                \n                                    guid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe globally unique identifier (GUID) for the RSS data entry.\n\n\n                                    \n                                \n                                \n                                    pubDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe publication date of the RSS data entry.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A Promise that resolves to the created RSS data entry.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllData()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rss-parser/rss-parser.repository.ts:50\n                \n            \n\n\n            \n                \n                    Retrieve all RSS data entries from the repository.\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A Promise that resolves to an array of RSS data entries.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { RssParser } from './entities/rss-parser.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class RssParserRepository {\n  constructor(\n    @InjectRepository(RssParser)\n    private readonly rssParserRepository: Repository,\n  ) {}\n\n  /**\n   * Create an RSS data entry if it does not already exist based on the provided GUID.\n   *\n   * @param title - The title of the RSS data entry.\n   * @param link - The link associated with the RSS data entry.\n   * @param guid - The globally unique identifier (GUID) for the RSS data entry.\n   * @param pubDate - The publication date of the RSS data entry.\n   * @returns A Promise that resolves to the created RSS data entry.\n   */\n  async createRssDataEntry(\n    title: string,\n    link: string,\n    guid: string,\n    pubDate: string,\n  ): Promise {\n    const existingRecord = await this.rssParserRepository.findOne({\n      where: { guid },\n    });\n\n    if (!existingRecord) {\n      const rssFeedData = new RssParser();\n      rssFeedData.title = title;\n      rssFeedData.link = link;\n      rssFeedData.guid = guid;\n      rssFeedData.date = pubDate;\n\n      return this.rssParserRepository.save(rssFeedData);\n    }\n    // const message = 'Duplicate Data';\n    // return { message };\n  }\n\n  /**\n   * Retrieve all RSS data entries from the repository.\n   *\n   * @returns A Promise that resolves to an array of RSS data entries.\n   */\n  async getAllData(): Promise {\n    return await this.rssParserRepository.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RssParserService.html":{"url":"injectables/RssParserService.html","title":"injectable - RssParserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RssParserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/rss-parser/rss-parser.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRssParser\n                            \n                            \n                                    Async\n                                getAllData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rssParserRepository: RssParserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/rss-parser/rss-parser.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rssParserRepository\n                                                  \n                                                        \n                                                                        RssParserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createRssParser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRssParser(createRssParserDto: CreateRssParserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rss-parser/rss-parser.service.ts:18\n                \n            \n\n\n            \n                \n                    Parse and process an RSS feed from the provided URL.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createRssParserDto\n                                    \n                                                CreateRssParserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nDTO (Data Transfer Object) containing the RSS feed URL.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        An array of parsed RSS data entries or a message if no data is added.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllData()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/rss-parser/rss-parser.service.ts:51\n                \n            \n\n\n            \n                \n                    Retrieve all parsed RSS data entries.\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        An array of RSS data entries.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateRssParserDto } from './dto/create-rss-parser.dto';\nimport * as Parser from 'rss-parser';\nimport { RssParserRepository } from './rss-parser.repository';\n\nconst parser = new Parser();\n\n@Injectable()\nexport class RssParserService {\n  constructor(private rssParserRepository: RssParserRepository) {}\n\n  /**\n   * Parse and process an RSS feed from the provided URL.\n   *\n   * @param createRssParserDto - DTO (Data Transfer Object) containing the RSS feed URL.\n   * @returns An array of parsed RSS data entries or a message if no data is added.\n   */\n  async createRssParser(createRssParserDto: CreateRssParserDto) {\n    // try {\n    const feed = await parser.parseURL(createRssParserDto.rssUrl);\n\n    const rssDataEntries = await Promise.all(\n      feed.items.map(async (item) => {\n        const rssDataParserResponse =\n          await this.rssParserRepository.createRssDataEntry(\n            item.title,\n            item.link,\n            item.guid,\n            item.pubDate,\n          );\n\n        return rssDataParserResponse; // You can return this if needed\n      }),\n    );\n\n    const data = rssDataEntries.filter((value) => value !== undefined);\n    const message = {\n      message: 'No data Added',\n    };\n    if (data.length > 0) {\n      return data;\n    }\n    return message;\n  }\n\n  /**\n   * Retrieve all parsed RSS data entries.\n   *\n   * @returns An array of RSS data entries.\n   */\n  async getAllData() {\n    return this.rssParserRepository.getAllData();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/database/database.config.ts\n            \n            injectable\n            DatabaseConfig\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/modules/rss-parser/dto/create-rss-parser.dto.ts\n            \n            class\n            CreateRssParserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/rss-parser/entities/rss-parser.entity.ts\n            \n            entity\n            RssParser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/rss-parser/rss-parser.controller.ts\n            \n            controller\n            RssParserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/rss-parser/rss-parser.repository.ts\n            \n            injectable\n            RssParserRepository\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/modules/rss-parser/rss-parser.service.ts\n            \n            injectable\n            RssParserService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/modules/rss-parser/rss-parser.service.ts\n            \n            variable\n            parser\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/typeorm : ^10.0.0\n        \n            mysql : ^2.18.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RssParserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_RssParserModule\n\n\n\ncluster_RssParserModule_exports\n\n\n\ncluster_RssParserModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nRssParserModule\n\nRssParserModule\n\nAppModule -->\n\nRssParserModule->AppModule\n\n\n\n\n\nRssParserService \n\nRssParserService \n\nRssParserService  -->\n\nRssParserModule->RssParserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nRssParserRepository\n\nRssParserRepository\n\nRssParserModule -->\n\nRssParserRepository->RssParserModule\n\n\n\n\n\nRssParserService\n\nRssParserService\n\nRssParserModule -->\n\nRssParserService->RssParserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (src/.../config.ts)\n                        \n                        \n                            parser   (src/.../rss-parser.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): any => ({\n  database: {\n    type: 'mysql',\n    host: 'localhost',\n    port: 3306,\n    username: 'root',\n    password: 'Jayrajkumar@123',\n    database: 'rss_feed_data',\n    synchronize: true,\n    logging: true,\n    entities: ['./modules/**/*.entity.ts'],\n    autoLoadEntities: true,\n    keepConnectionAlive: true,\n  },\n  // database: {\n  //   type: 'mysql',\n  //   host: process.env.DB_HOST,\n  //   port: 3306,\n  //   username: process.env.DB_USERNAME,\n  //   password: process.env.DB_PASSWORD,\n  //   database: process.env.DB_DATABASE,\n  //   synchronize: true,\n  //   logging: true,\n  //   entities: ['./modules/**/*.entity.ts'],\n  //   autoLoadEntities: true,\n  //   keepConnectionAlive: true,\n  // },\n})\n                    \n                \n\n\n        \n    \n\n    src/modules/rss-parser/rss-parser.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Parser()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
